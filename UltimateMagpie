import java.util.*;

//Authors Nathan Chin and Sam Orta
public class Magpie
{
	//Setup for program
	public static void main(String[] args)
	{
	//Scanner and initial question
	Magpie maggie = new Magpie();
	System.out.println (maggie.getGreeting());
	Scanner in = new Scanner (System.in);
	String statement = in.nextLine();
    	String[] common = new String[10];
    	String[] family = new String[10];
    	String[] school = new String[10];
    	String[] activities = new String[10];
    	String[] friends = new String[10];
    	String[] life = new String[10];
            common[0] = "Are you having a bad day?";
            common[1] = "I don't understand";
            common[2] = "What's wrong?";
            common[3] = "Why do you find it interesting?";
            common[4] = "Why do you not like it?";
            common[5] = "Why do you not like it?";
            common[6] = "Why do you not like it?";
            common[7] = "Why do you not like it?";
            common[8] = "Why do you not like it?";
            common[9] = "Why do you not like it?";
            common[10] = "Why do you not like it?";
            
            family[0] = "Do you have any grandparents?";
            family[1] = "Older or younger?";
            family[2] = "Any other siblings";
            family[3] = "Is he around often?";
            family[4] = "What's her opinion on school?";
            family[5] = "What's her opinion on school?";
            family[6] = "What's her opinion on school?";
            family[7] = "What's her opinion on school?";
            family[8] = "What's her opinion on school?";
            family[9] = "What's her opinion on school?";
            family[10] = "What's her opinion on school?";
            
            
            school[0] = "What's your favorite subjects?";
            school[1] = "Is any subject hard for you?";
            school[3] = "Any interest in going into that field?";
            school[4] = "Does it have a lot of homework?";
            school[5] = "How's the teacher?";
            school[6] = ""
            school[7] = ""
            school[8] = ""
            school[9] = ""
            school[10] = ""
            
            activities[0] = "What do you do after school?";
            activities[1] = "What do you do after school?";
            activities[2] = "What do you do after school?";
            activities[3] = "What do you do after school?";
            activities[4] = "What do you do after school?";
            activities[5] = "What do you do after school?";
            activities[6] = "What do you do after school?";
            activities[7] = "What do you do after school?";
            activities[8] = "What do you do after school?";
            activities[9] = "What do you do after school?";
            activities[10] = "What do you do after school?";
            
            friends[0] = "Do you have any best friends?";
            friends[1] = "Do you have any best friends?";
            friends[2] = "Do you have any best friends?";
            friends[3] = "Do you have any best friends?";
            friends[4] = "Do you have any best friends?";
            friends[5] = "Do you have any best friends?";
            friends[6] = "Do you have any best friends?";
            friends[7] = "Do you have any best friends?";
            friends[8] = "Do you have any best friends?";
            friends[9] = "Do you have any best friends?";
            friends[10] = "Do you have any best friends?";

            life[0] = "How's life treating you?";
            life[1] = "How much sleep do you get per night?";
            life[2] = "How's life treating you?";
            life[3] = "How's life treating you?";
            life[4] = "How's life treating you?";
            life[5] = "How's life treating you?";
            life[6] = "How's life treating you?";
            life[7] = "How's life treating you?";
            life[8] = "How's life treating you?";
            life[9] = "How's life treating you?";
            life[10] = "How's life treating you?";
		while (!statement.equals("Bye"))
		{
			System.out.println (maggie.getResponse(statement));
			statement = in.nextLine();
		}
		in.close();
	}
	/**
	 * Get a default greeting 	
	 * @return a greeting
	 */
	public String getGreeting()
	{
		return "Hello, let's talk.";
	}

	/**
	 * Gives a response to a user statement
	 * 
	 * @param statement
	 *            the user statement
	 * @return a response based on the rules given
	 */
	public String getResponse(String statement)
	{
		String response = "";
		if (statement.indexOf("no") >= 0)
		{
			response = "Why so negative?";
		}
		else if (statement.indexOf("java") >= 0)
		{
			response = "That's my favorite language!";
		}
		else if (statement.trim().length() == 0)
		{
			response = "Please say something"; 			
		}
		else if (statement.indexOf("school") >= 0)
		{
			response = "Tell me more about school";
		}
		else if (statement.indexOf("hello") >= 0)
		{
			response = "Hello, tell me about your day?";
		}
		else if (statement.indexOf("mother") >= 0
				|| statement.indexOf("father") >= 0
				|| statement.indexOf("sister") >= 0
				|| statement.indexOf("brother") >= 0)
		{
			response = "Tell me more about your family.";
		}
		else if (statement.indexOf("cat") >= 0
				|| statement.indexOf("dog") >= 0)
		{
			response = "Tell me more about your pets.";
		}
		else if (statement.indexOf("Dr. Raj") >= 0)
		{
			response = "He sounds like a good teacher";
		}
		else
		{
			response = getRandomResponse();
		}
		return response;
	}
		/**
	 * Pick a default response to use if nothing else fits.
	 * @return a non-committal string
	 */
	
	private int findKeyword(String statement, String goal,
			int startPos)
	{
		String phrase = statement.trim();
		// The only change to incorporate the startPos is in
		// the line below
		int psn = phrase.toLowerCase().indexOf(
				goal.toLowerCase(), startPos);

	    // at this point, if psn found the goal string inside
	    // the statement, it is psn is 0 or greater 

		// Refinement--no to make sure that the goal isn't part of a
		// word, like "no" inside "knowledge"
		while (psn >= 0)
		{
			// Find the string of length 1 before and after
			// the word- we want to grap the the letter before and
			// after the found string.
			String before = " ", after = " ";
			if (psn > 0)
			{
				before = phrase.substring(psn - 1, psn)
						.toLowerCase();
			}
			if (psn + goal.length() < phrase.length())
			{
				after = phrase.substring(
						psn + goal.length(),
						psn + goal.length() + 1)
						.toLowerCase();
			}

			// If before and after aren't letters, we've
			// found the word
			if (((before.compareTo("a") < 0) || (before
					.compareTo("z") > 0)) // before is not a
											// letter
					&& ((after.compareTo("a") < 0) || (after
							.compareTo("z") > 0)))
			{
				return psn;
			}

			// We only get to this part of the code if
			// the last position didn't work, so let's find
			// the next, if there is one.
			psn = phrase.indexOf(goal.toLowerCase(),
					psn + 1);

		}

		return -1;
	}
	
	private String getRandomResponse()
	{
		Random ran = new Random();
		int answer = ran.nextInt(3);
		String response = "";
		if (answer == 0)
		{
			response = "You don't say.";
		}
		else if (answer == 2)
		{
			response = "Mhm";
		}
		else if (answer == 1)
		{
			response = "That's interesting";
		}
		return response;
	}
}
